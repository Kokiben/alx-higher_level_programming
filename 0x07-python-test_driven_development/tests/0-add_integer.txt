The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

Importing the function from the module:
	>>> add_integer = __import__("0-add_integer").add_integer

Verify for module docstring:
	 >>> n = __import__("0-add_integer").__doc__
	 >>> len(n) > 1
	 True

Verify for function docstring:
	 >>> j = __import__("0-add_integer").add_integer.__doc__
         >>> len(j) > 1
         True

Verify regular addition:
	 >>> add_integer(1, 3)
	 4

Verify positive with negative:
	 >>> add_integer(3, -6)
	 -3

Verify negative with positive:
	 >>> add_integer(-4, 8)
	 4

Verify addition over multiple values:
	 >>> [add_integer(e, e ** 2) for e in range(6)]
	 [0, 2, 6, 12, 20, 30]

Verify float with int:
	 >>> add_integer(2.8, 6)
	 8

Verify int with float:
	 >>> add_integer(6, 7.3)
	 13

Verify add two float:
	 >>> add_integer(3.45, 4.1)
	 7

Verify for passed NaN:
	 >>> add_integer(1, float('nan'))
	 Traceback (most recent call last):
	 ...
	 ValueError: cannot convert float NaN to integer

Verify for passed inf:
	 >>> add_integer(1, float('inf'))
	 Traceback (most recent call last):
	 ...
	 OverflowError: can't conver float infinity to int

Verify super long int:
	 >>> add_integer(999999999999999999999999999999, 1)
	 1000000000000000000000000000000

verify non-number with number:
	 >>> add_integer([1], 2)
	 Traceback (most recent call last):
	 ...
	 TypeError: a must be an integer

verify number with non-number:
	 >>> add_integer(3, "2")
	 Traceback (most recent call last):
	 ...
	 TypeError: b must be an integer

verify non-number with non-number:
	 >>> add_integer((2,), {"key": "value"})
         Traceback (most recent call last):
         ...
         TypeError: a must be an integer

verify bool with number:
	 >>> add_integer(True, 1)
	 Traceback (most recent call last):
         ...
         TypeError: a must be an integer

verify number with bool:
	 >>> add_integer(0, False)
         Traceback (most recent call last):
         ...
         TypeError: b must be an integer

verify no args:
	 >>> add_integer()
	 Traceback (most recent call last):
	 ...
	 TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'

verify one arg:
	 >>> add_integer(1)
	 Traceback (most recent call last):
         ...
	 TypeError: add_integer() missing 1 required positional argument: 'b'

verify more than 2 args:
	 >>> add_integer(1, 2, 3)
         Traceback (most recent call last):
         ...
         TypeError: add_integer() takes 2 positional arguments but 3 were given
