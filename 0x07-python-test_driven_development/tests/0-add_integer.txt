===========================
Used 0-add_integer.py
===========================

This module Crafts a function to sum up integers, ensuring type consistency by converting inputs when needed.

Usage
=====

The function from module:
	>>> add_integer = __import__("0-add_integer").add_integer

Checking the first addition:
>>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 1)
    3

Checking the second positive add negative:
>>> add_integer(2, -5)
    -3

Checking the third float add positive integer:
>>> add_integer(1.8, 1)
    2

Checking the fourth float add negative integer:
>>> add_integer(-2.8, -1)
    -2

Checking the fifth add both float positive:
>>> add_integer(1.2, 1.2)
    2

Checking the sixth add both float negative:
>>> add_integer(-1.2, -1.2)
    -2


Non-Numbers
===========

The function add_integer() assumes that both arguments are either integers or floats.
If either argument is neither an integer nor a float, a TypeError is triggered:

>>> add_integer(1, "hello")
Traceback (most recent call last):
TypeError: b must be an integer

::

>>> add_integer("hello", 4)
Traceback (most recent call last):
TypeError: a must be an integer

::

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

::

>>> add_integer(1.2, None)
Traceback (most recent call last):
TypeError: b must be an integer

If both inputs are neither integers nor floats, a TypeError message is solely
displayed for the initial argument

::

>>> add_integer("hello", "four")
Traceback (most recent call last):
TypeError: a must be an integer

The function will encounter an issue if infinity is supplied.

::

>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
     
::

>>> add_integer(4, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

The function will encounter an issue if NaN (Not a Number) values are provided.


::

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

::

>>> add_integer(4, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
